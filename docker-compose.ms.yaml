version: '3'

services:
  mysql:
    container_name: jawiki_db
    build:
      context: ./mysql/
      dockerfile: build/Dockerfile
    env_file: mysql.env
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_data/:/var/lib/mysql
    ports:
      - 3306:3306
    # 文字コードを触ったりファイルを読み込むおまじない②を書いています
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --local-infile=1

  elasticsearch:
    container_name: ls_es01
    build: 
      context: ./elasticsearch/
      dockerfile: build/Dockerfile
    environment:
      - discovery.type=single-node
      #- node.master=true
      #- node.data=true
      - xpack.security.enabled=false
      #- bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - TZ=Asia/Tokyo
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    logging: 
      driver: 'json-file'
      options: 
        max-size: '10m'
        max-file: '3'
    ports: 
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - mysql

  logstash:
    container_name: logstash
    build: 
      context: ./logstash/
      dockerfile: build/Dockerfile
    ports: 
      - "5044:5044"
      - "9600:9600"
    env_file: mysql.env
    environment:
      TZ: Asia/Tokyo
    depends_on: 
      - elasticsearch
      - mysql


  # 内部監視用
  prometheus:
    image: prom/prometheus
    container_name: sync_dbes_prom
    volumes:
      - ./monitoring_resources/prometheus:/etc/prometheus
    environment:
      TZ: Asia/Tokyo
    command: --config.file=/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
  
  grafana:
    image: grafana/grafana:8.3.4
    container_name: sync_dbes_graf
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./monitoring_resources/grafana/dashboards/:/etc/grafana/provisioning/dashboards/
      - ./monitoring_resources/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - "3000:3000"
  
  node-exporter:
    image: prom/node-exporter
    container_name: sync_dbes_nodex
    environment:
      TZ: Asia/Tokyo
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    
  cadvisor:
    image: google/cadvisor:latest
    container_name: sync_dbes_cadvisor
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Tokyo
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
  
volumes:
  mysql_data: